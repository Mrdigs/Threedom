/*
  top, right, bottom, left is the css standard
  so for planes, I recommend front, top, right, back, bottom, left
*/

:root {
  --x-rotation: 0;
  --y-rotation: 0;
  --z-rotation: 0;
  --x-translation: 0;
  --y-translation: 0;
  --z-translation: 0;
}

.three-d, .three-d > *:not(.three-d) {

  --x-rotation: 0;
  --y-rotation: 0;
  --z-rotation: 0;
  --x-translation: 0;
  --y-translation: 0;
  --z-translation: 0;

  --width: var(width);
  --height: var(height);
  --depth: 0;

  /* https://gist.github.com/stereokai/7666bfe93929b14c2dced148c79e0e97 */
  /*

  --angle: 60;

  --pi: 3.141592653589793238;
  --rad: calc(var(--angle) * var(--pi) / 180);

  --tan-term1: var(--rad);
  --tan-term2: calc((1/3) * var(--rad) * var(--rad) * var(--rad));
  --tan-term3: calc((2/15) * var(--rad) * var(--rad) * var(--rad) * var(--rad) * var(--rad));
  --tan-term4: calc((17/315) * var(--rad) * var(--rad) * var(--rad) * var(--rad) * var(--rad) * var(--rad) * var(--rad));
  --tan: calc(var(--tan-term1) + var(--tan-term2) + var(--tan-term3) + var(--tan-term4));
  */
}

.three-d > *:not(.three-d) {
  --width: inherit;
  --height: inherit;
  --depth: inherit;
}

.three-d {
  width: var(--width);
  height: var(--height);
  /* transform-style: preserve-3d; */
  margin: auto;
}

.three-d.outlined, .three-d.outlined .three-d, .three-d.outlined .three-d.object > *, .three-d.outlined.object > * {
  outline: 1px dotted gray;
}

.three-d.space {
  perspective: 200vmax;
  overflow: hidden;
}

.three-d.space * {
  transform-style: preserve-3d;
}

.three-d.reflective.space {
  -webkit-box-reflect: below 0 url('data:image/svg+xml;charset=utf-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzdmcgd2lkdGg9IjIxMG1tIiBoZWlnaHQ9IjI5N21tIiB2ZXJzaW9uPSIxLjEiIHZpZXdCb3g9IjAgMCAyMTAgMjk3IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCjxkZWZzPg0KPGxpbmVhckdyYWRpZW50IGlkPSJhIiB4MT0iMTA3LjY3IiB4Mj0iMTA3LjQ1IiB5MT0iMzkzLjc0IiB5Mj0iMTQ0LjM4IiBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDEuMzYxMiAwIDAgMSAtMzkuMjQ1IDApIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSI+DQo8c3RvcCBzdG9wLWNvbG9yPSIjMDYwMDAwIiBvZmZzZXQ9IjAiLz4NCjxzdG9wIHN0b3AtY29sb3I9IiMwNjAwMDAiIHN0b3Atb3BhY2l0eT0iMCIgb2Zmc2V0PSIxIi8+DQo8L2xpbmVhckdyYWRpZW50Pg0KPC9kZWZzPg0KPG1ldGFkYXRhPg0KPHJkZjpSREY+DQo8Y2M6V29yayByZGY6YWJvdXQ9IiI+DQo8ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD4NCjxkYzp0eXBlIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiLz4NCjxkYzp0aXRsZS8+DQo8L2NjOldvcms+DQo8L3JkZjpSREY+DQo8L21ldGFkYXRhPg0KPHJlY3QgeD0iLS4zMjUxOSIgeT0iMS4wNDA5IiB3aWR0aD0iMjEwLjM5IiBoZWlnaHQ9IjI5Ni42OSIgZmlsbD0idXJsKCNhKSIgZmlsbC1ydWxlPSJldmVub2RkIiBzdHJva2Utd2lkdGg9Ii4zMDg2OCIvPg0KPC9zdmc+');
}

.three-d.object, .three-d.carousel {
    position: relative;
}

.three-d.object > *, .three-d.carousel > *, .three-d.wheel > * {
  position: absolute;
  transform:
    rotateX(var(--x-rotation))
    rotateY(var(--y-rotation))
    rotateZ(var(--z-rotation))
    translateX(var(--x-translation))
    translateY(var(--y-translation))
    translateZ(var(--z-translation));
  width: inherit;
  height: inherit;
  /* This messes with making faces of objects 3d */
  /* like a card for a carousel face to have back and front */
  /* check the impact before uncommenting */
  /* overflow: hidden; */
}

/*
.three-d.shaded.object > * {
  box-shadow: inset 0px 0px 100px #00000075;
}
*/

/*
  front, top, right, back, bottom, left
*/

.three-d.shaded.object > *:nth-child(2) {
  filter: brightness(1.2); /* top */
}

.three-d.shaded.object > *:nth-child(3) {
  filter: brightness(0.9); /* right */
}

.three-d.shaded.object > *:nth-child(4) {
  filter: brightness(0.8); /* back */
}

.three-d.shaded.object > *:nth-child(5) {
  filter: brightness(0.8); /* bottom */
}

.three-d.shaded.object > *:nth-child(6) {
  filter: brightness(1.1); /* left */
}

.three-d.seated.object > *:nth-child(5):nth-last-child(2) {
  /* the 5th, bottom plane has a shadow when seated */
  box-shadow: -7px -7px 20px 0px #000000b5;
}

/*
 See http://lea.verou.me/2011/01/styling-children-based-on-their-number-with-css3/
*/

/* two faces */

.three-d.object > *:nth-child(2):nth-last-child(1) {
  /* the 2nd face */
  --y-rotation: 180deg;
}

/* six faces */

.three-d.object > *:nth-child(6):nth-last-child(1) {
  /* the 6th face */
  --z-translation: calc(calc(var(--width) / 2) + calc(calc(var(--width) - var(--depth)) / -2));
  --y-rotation: 270deg;
  width: var(--depth);
}

.three-d.object > *:nth-child(5):nth-last-child(2) {
  /* the 5th face */
  --z-translation: calc(calc(var(--height) / 2) + calc(calc(var(--height) - var(--depth)) / 2));
  --x-rotation: 270deg;
  height: var(--depth);
}

.three-d.object > *:nth-child(4):nth-last-child(3) {
  /* the 4th face */
  --z-translation: calc(var(--depth) / 2);
  --y-rotation: 180deg;
}

.three-d.object > *:nth-child(3):nth-last-child(4) {
  /* the 3rd face */
  --z-translation: calc(calc(var(--width) / 2) + calc(calc(var(--width) - var(--depth)) / 2));
  --y-rotation: 90deg;
  width: var(--depth);
}

.three-d.object > *:nth-child(2):nth-last-child(5) {
  /* the 2nd face */
  --z-translation: calc(calc(var(--height) / 2) - calc(calc(var(--height) - var(--depth)) / 2));
  --x-rotation: 90deg;
  height: var(--depth);
}

.three-d.object > *:nth-child(1):nth-last-child(6) {
  /* the 1st face */
  --z-translation: calc(var(--depth) / 2);
}

/* WHEEL */
/* ===== */

.three-d.wheel {
  --tan: 0;
  --wheel-angle: 0deg;
}

/* three faces */

.three-d.wheel > *:first-child:nth-last-child(3),
.three-d.wheel > *:first-child:nth-last-child(3) ~ * {
  --tan: 1.732050808;
  --wheel-angle: 120deg;
  --z-translation: calc(calc(var(--height) / 2) / var(--tan));
}

/* four faces */

.three-d.wheel > *:first-child:nth-last-child(4),
.three-d.wheel > *:first-child:nth-last-child(4) ~ * {
  --tan: 1;
  --wheel-angle: 90deg;
  --z-translation: calc(calc(var(--height) / 2) / var(--tan));
}

/* 5 faces */

.three-d.wheel > *:first-child:nth-last-child(5),
.three-d.wheel > *:first-child:nth-last-child(5) ~ * {
  --tan: 0.726542528;
  --wheel-angle: 72deg;
  --z-translation: calc(calc(var(--height) / 2) / var(--tan));
}

/* 6 faces */

.three-d.wheel > *:first-child:nth-last-child(6),
.three-d.wheel > *:first-child:nth-last-child(6) ~ * {
  --tan: 0.577350269;
  --wheel-angle: 60deg;
  --z-translation: calc(calc(var(--height) / 2) / var(--tan));
}

/* 7 faces */

.three-d.wheel > *:first-child:nth-last-child(7),
.three-d.wheel > *:first-child:nth-last-child(7) ~ * {
  --tan: 0.481574619;
  --wheel-angle: 51.428571429deg;
  --z-translation: calc(calc(var(--height) / 2) / var(--tan));
}

/* 8 faces */

.three-d.wheel > *:first-child:nth-last-child(8),
.three-d.wheel > *:first-child:nth-last-child(8) ~ * {
  --tan: 0.414213562;
  --wheel-angle: 45deg;
  --z-translation: calc(calc(var(--height) / 2) / var(--tan));
}

.three-d.wheel > *:nth-child(2) {
  /* the 2nd face */
  --x-rotation: calc(var(--wheel-angle) * 1);
}

.three-d.wheel > *:nth-child(3) {
  /* the 3rd face */
  --x-rotation: calc(var(--wheel-angle) * 2);
}

.three-d.wheel > *:nth-child(4) {
  /* the 4th face */
  --x-rotation: calc(var(--wheel-angle) * 3);
}

.three-d.wheel > *:nth-child(5) {
  /* the 5th face */
  --x-rotation: calc(var(--wheel-angle) * 4);
}

.three-d.wheel > *:nth-child(6) {
  /* the 6th face */
  --x-rotation: calc(var(--wheel-angle) * 5);
}

.three-d.wheel > *:nth-child(7) {
  /* the 7th face */
  --x-rotation: calc(var(--wheel-angle) * 6);
}

.three-d.wheel > *:nth-child(8) {
  /* the 8th face */
  --x-rotation: calc(var(--wheel-angle) * 7);
}

.three-d.wheel > *:nth-child(9) {
  /* the 9th face */
  --x-rotation: calc(var(--wheel-angle) * 8);
}

.three-d.wheel > *:nth-child(10) {
  /* the 10th face */
  --x-rotation: calc(var(--wheel-angle) * 9);
}


/* CAROUSEL */
/* ======== */

.three-d.carousel {
  --tan: 0;
  --carousel-angle: 0deg;
}

/* three faces */

.three-d.carousel > *:first-child:nth-last-child(3),
.three-d.carousel > *:first-child:nth-last-child(3) ~ * {
  --tan: 1.732050808;
  --carousel-angle: 120deg;
  --z-translation: calc(calc(var(--width) / 2) / var(--tan));
}

/* four faces */

.three-d.carousel > *:first-child:nth-last-child(4),
.three-d.carousel > *:first-child:nth-last-child(4) ~ * {
  --tan: 1;
  --carousel-angle: 90deg;
  --z-translation: calc(calc(var(--width) / 2) / var(--tan));
}

/* 5 faces */

.three-d.carousel > *:first-child:nth-last-child(5),
.three-d.carousel > *:first-child:nth-last-child(5) ~ * {
  --tan: 0.726542528;
  --carousel-angle: 72deg;
  --z-translation: calc(calc(var(--width) / 2) / var(--tan));
}

/* 6 faces */

.three-d.carousel > *:first-child:nth-last-child(6),
.three-d.carousel > *:first-child:nth-last-child(6) ~ * {
  --tan: 0.577350269;
  --carousel-angle: 60deg;
  --z-translation: calc(calc(var(--width) / 2) / var(--tan));
}

/* 7 faces */

.three-d.carousel > *:first-child:nth-last-child(7),
.three-d.carousel > *:first-child:nth-last-child(7) ~ * {
  --tan: 0.481574619;
  --carousel-angle: 51.428571429deg;
  --z-translation: calc(calc(var(--width) / 2) / var(--tan));
}

/* 8 faces */

.three-d.carousel > *:first-child:nth-last-child(8),
.three-d.carousel > *:first-child:nth-last-child(8) ~ * {
  --tan: 0.414213562;
  --carousel-angle: 45deg;
  --z-translation: calc(calc(var(--width) / 2) / var(--tan));
}

.three-d.carousel > *:nth-child(2) {
  /* the 2nd face */
  --y-rotation: calc(var(--carousel-angle) * 1);
}

.three-d.carousel > *:nth-child(3) {
  /* the 3rd face */
  --y-rotation: calc(var(--carousel-angle) * 2);
}

.three-d.carousel > *:nth-child(4) {
  /* the 4th face */
  --y-rotation: calc(var(--carousel-angle) * 3);
}

.three-d.carousel > *:nth-child(5) {
  /* the 5th face */
  --y-rotation: calc(var(--carousel-angle) * 4);
}

.three-d.carousel > *:nth-child(6) {
  /* the 6th face */
  --y-rotation: calc(var(--carousel-angle) * 5);
}

.three-d.carousel > *:nth-child(7) {
  /* the 7th face */
  --y-rotation: calc(var(--carousel-angle) * 6);
}

.three-d.carousel > *:nth-child(8) {
  /* the 8th face */
  --y-rotation: calc(var(--carousel-angle) * 7);
}

.three-d.carousel > *:nth-child(9) {
  /* the 9th face */
  --y-rotation: calc(var(--carousel-angle) * 8);
}

.three-d.carousel > *:nth-child(10) {
  /* the 10th face */
  --y-rotation: calc(var(--carousel-angle) * 9);
}

/* CAROUSEL WRAPPING */
/* ================= */

.three-d.wrapped.carousel > * {
  background-size: cover;
}

.three-d.wrapped.carousel > *:nth-child(2) {
  background-position-x: calc(var(--width) * -1);
}

.three-d.wrapped.carousel > *:nth-child(3) {
  background-position-x: calc(var(--width) * -2);
}

.three-d.wrapped.carousel > *:nth-child(4) {
  background-position-x: calc(var(--width) * -3);
}

.three-d.wrapped.carousel > *:nth-child(5) {
  background-position-x: calc(var(--width) * -4);
}

.three-d.wrapped.carousel > *:nth-child(6) {
  background-position-x: calc(var(--width) * -5);
}

.three-d.wrapped.carousel > *:nth-child(7) {
  background-position-x: calc(var(--width) * -6);
}

.three-d.wrapped.carousel > *:nth-child(8) {
  background-position-x: calc(var(--width) * -7);
}

.three-d.wrapped.carousel > *:nth-child(9) {
  background-position-x: calc(var(--width) * -8);
}

.three-d.wrapped.carousel > *:nth-child(10) {
  background-position-x: calc(var(--width) * -9);
}


/* ANIMATIONS */
/* ========== */

.three-d.rotating {
    animation-name: rotating;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-duration: 10s;
}

.three-d.spinning {
    animation-name: spinning;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-duration: 10s;
}

.three-d.rolling {
    animation-name: rolling;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-duration: 10s;
}

@keyframes rotating {
    from {
        transform: rotate3d(1, 1, 1, 0deg);
    }
    to {
        transform: rotate3d(1, 1, 1, 360deg);
    }
}

@keyframes spinning {
    from {
        transform: rotate3d(0, 1, 0, 360deg);
    }
    to {
        transform: rotate3d(0, 1, 0, 0deg);
    }
}

@keyframes rolling {
    from {
        transform: rotate3d(1, 0, 0, 360deg);
    }
    to {
        transform: rotate3d(1, 0, 0, 0deg);
    }
}
